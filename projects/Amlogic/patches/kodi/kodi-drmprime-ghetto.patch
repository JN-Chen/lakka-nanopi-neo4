diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecDRMPRIME.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecDRMPRIME.cpp
index e04c3c6ff6..dcf97af4ef 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecDRMPRIME.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecDRMPRIME.cpp
@@ -156,7 +156,7 @@ void CVideoBufferPoolDRMPRIME::Return(int id)
 //------------------------------------------------------------------------------
 
 CDVDVideoCodecDRMPRIME::CDVDVideoCodecDRMPRIME(CProcessInfo& processInfo)
-  : CDVDVideoCodec(processInfo)
+  : CDVDVideoCodec(processInfo), m_prevTime(0), m_seeking(false)
 {
   m_pFrame = av_frame_alloc();
   m_videoBufferPool = std::make_shared<CVideoBufferPoolDRMPRIME>();
@@ -406,6 +406,20 @@ CDVDVideoCodec::VCReturn CDVDVideoCodecDRMPRIME::GetPicture(VideoPicture* pVideo
     return VC_ERROR;
   }
 
+  if (m_prevTime && std::abs(m_prevTime - m_processInfo.GetTime()) >= 5000)
+    m_seeking = true;
+
+  m_prevTime = m_processInfo.GetTime();
+
+  // Drop frames too far away from the target time
+  if (m_seeking && std::abs(m_pFrame->pts/1000 - m_processInfo.GetTime()) >= 5000) {
+    CLog::Log(LOGDEBUG, "CDVDVideoCodecDRMPRIME::%s - Dropping pts %llu time %lld", __FUNCTION__, m_pFrame->pts/1000, m_processInfo.GetTime());
+    av_frame_unref(m_pFrame);
+    return VC_BUFFER;
+  }
+
+  m_seeking = false;
+
   if (pVideoPicture->videoBuffer)
     pVideoPicture->videoBuffer->Release();
   pVideoPicture->videoBuffer = nullptr;
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecDRMPRIME.h b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecDRMPRIME.h
index ffcdf1a7b6..4455280e38 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecDRMPRIME.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecDRMPRIME.h
@@ -79,4 +79,6 @@ protected:
   AVCodecContext* m_pCodecContext = nullptr;
   AVFrame* m_pFrame = nullptr;
   std::shared_ptr<CVideoBufferPoolDRMPRIME> m_videoBufferPool;
+  int64_t m_prevTime;
+  bool m_seeking;
 };
diff --git a/xbmc/cores/VideoPlayer/Process/ProcessInfo.cpp b/xbmc/cores/VideoPlayer/Process/ProcessInfo.cpp
index e8d9023a9f..4299894c00 100644
--- a/xbmc/cores/VideoPlayer/Process/ProcessInfo.cpp
+++ b/xbmc/cores/VideoPlayer/Process/ProcessInfo.cpp
@@ -635,6 +635,13 @@ bool CProcessInfo::GetVideoRender()
   return m_renderVideoLayer;
 }
 
+int64_t CProcessInfo::GetTime()
+{
+  CSingleLock lock(m_stateSection);
+
+  return m_time;
+}
+
 void CProcessInfo::SetPlayTimes(time_t start, int64_t current, int64_t min, int64_t max)
 {
   CSingleLock lock(m_stateSection);
diff --git a/xbmc/cores/VideoPlayer/Process/ProcessInfo.h b/xbmc/cores/VideoPlayer/Process/ProcessInfo.h
index e8042c2bc2..5b4aea9b9d 100644
--- a/xbmc/cores/VideoPlayer/Process/ProcessInfo.h
+++ b/xbmc/cores/VideoPlayer/Process/ProcessInfo.h
@@ -101,6 +101,7 @@ public:
   bool GetGuiRender();
   void SetVideoRender(bool video);
   bool GetVideoRender();
+  int64_t GetTime();
 
   void SetPlayTimes(time_t start, int64_t current, int64_t min, int64_t max);
   int64_t GetMaxTime();
